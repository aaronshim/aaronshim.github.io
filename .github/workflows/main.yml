name: CI

on:
  pull_request:
  push:
    branches:
      - main # Ensure this is your default branch for deployments

# Grant permissions for the GITHUB_TOKEN
# This is required for actions/deploy-pages and the attestation action
permissions:
  contents: read # Allow checkout
  pages: write # Allow writing to the gh-pages branch (for deployment)
  id-token: write # Required for the actions/deploy-pages and attestation action
  # The actions/attest-build-provenance action requires the 'attestations: write' permission
  attestations: write

jobs:
  build-nix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            allow-import-from-derivation = true
            auto-optimise-store = true
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org https://cache.iog.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

      - name: Build with cachix
        uses: cachix/cachix-action@v16
        with:
          name: hakyll-nix-template
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      # Run tests and build site
      # This runs all checks (including tests) and builds the site
      - name: Run tests
        run: nix flake check --accept-flake-config
      
      - name: Build site
        run: nix build --accept-flake-config

      # --- Generate SLSA Attestation ---
      # Attests to the creation of the ./result/dist directory contents
      - name: Generate SLSA Attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: ./result/dist # Path to the built website artifact

      # --- Upload the built site as a pages artifact ---
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./result/dist # Path to the built website artifact

  deploy:
    # Deploy only on pushes to the main branch
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-nix] # Depends on the build job completing successfully

    steps:
      # Deploy the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # No 'with' or 'env' needed when using actions/upload-pages-artifact
